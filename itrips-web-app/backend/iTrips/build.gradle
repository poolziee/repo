plugins {
	id 'jacoco'
	id 'org.springframework.boot' version '2.5.4'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id "org.sonarqube" version "3.3"
}


jacocoTestReport {
	reports {
		xml.enabled true
	}
}
test.finalizedBy jacocoTestReport
tasks.named('sonarqube').configure {
	dependsOn test
}


group = 'fontys.sem3'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.5.4'
	implementation 'org.springframework.boot:spring-boot-starter-security:2.5.4'
	implementation 'org.springframework.boot:spring-boot-starter-web:2.5.4'
	implementation 'com.auth0:java-jwt:3.18.2'
	implementation 'joda-time:joda-time:2.10.13'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'junit:junit:4.13.1'
	/*implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.1'*/

	developmentOnly 'org.springframework.boot:spring-boot-devtools:2.6.2'
	runtimeOnly 'mysql:mysql-connector-java:8.0.25'
	runtimeOnly 'com.h2database:h2'

	annotationProcessor 'org.projectlombok:lombok:1.18.20'

	implementation "org.mapstruct:mapstruct:1.4.2.Final"
	annotationProcessor "org.mapstruct:mapstruct-processor:1.4.2.Final"

	testImplementation 'org.springframework.boot:spring-boot-starter-test:2.5.4'
	testImplementation 'org.springframework.security:spring-security-test:5.5.1'

	// mockito
	dependencies { testImplementation "org.mockito:mockito-core:3.+" }
}

sonarqube {
	properties {
		property "sonar.projectKey", "iTrips"
		/*property "sonar.qualitygate.wait", true*/
	}
}

test {
	useJUnitPlatform()
}
